<Activity mc:Ignorable="sap sap2010" x:Class="NoTimeReportedSummaryReport" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_dicConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_dt_WeeklyReport" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_boolNoDataNotApproved" Type="InArgument(x:Boolean)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>662,3206</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>NoTimeReportedSummaryReport_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.Unsafe</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This flow will creates monthly summary report for Not Approved people and send out email if it is last wednesday of the month." DisplayName="Sequence Not Approved Summary Report" sap:VirtualizedContainerService.HintSize="672,3141" sap2010:WorkflowViewState.IdRef="Sequence_5">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch Not Approved Summary Report" sap:VirtualizedContainerService.HintSize="610,2988" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="This flow will creates monthly summary report for Not Approved people and send out email if it is last wednesday of the month." DisplayName="Not Approved Summary Report" sap:VirtualizedContainerService.HintSize="572,2760" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="boolReportCreatedNow" />
            <Variable x:TypeArguments="sd:DataTable" Name="dt_WeeklyDetails" />
            <Variable x:TypeArguments="s:DateTime" Name="dateLastWedOfMonth" />
            <Variable x:TypeArguments="x:String" Name="strFileName" />
            <Variable x:TypeArguments="x:Boolean" Name="boolLastRun" />
            <Variable x:TypeArguments="x:String" Name="strSummaryReportPath" />
            <Variable x:TypeArguments="s:DateTime" Name="dateToday" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="log Not Approved Summary Report Start" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Not approved summary report - start&quot;]" />
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This will gets the last wednesday" DisplayName="GetLastWednesdayOfMonth.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Process\SummaryReport\GetLastWednesdayOfMonth.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="s:DateTime" x:Key="out_DateLastWedOfMonth">[dateLastWedOfMonth]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <Assign DisplayName="Assign Filename Not Approved" sap:VirtualizedContainerService.HintSize="510,83" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strFileName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(dateLastWedOfMonth.Day&lt;3,CStr(in_dicConfig("NotApprovedSummaryReportFileName")).replace("{currentMonth}",now.AddMonths(-1).ToString("MMMM")).replace("{year}",now.AddMonths(-1).Year.ToString),
CStr(in_dicConfig("NotApprovedSummaryReportFileName")).replace("{currentMonth}",now.ToString("MMMM")).replace("{year}",now.Year.ToString))]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This will create the monthly summary report for not appvoed people" DisplayName="Check And Create  Not Approved Summary Report" sap:VirtualizedContainerService.HintSize="510,155" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Process\SummaryReport\CheckAndCreateSummaryReport.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_strFolderPath">[CStr(in_dicConfig("P003_090_TimesheetApprovals_SummaryFolder"))]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_strFileName">[strFileName]</InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="out_boolReportCreatedNow">[boolReportCreatedNow]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_strReportTemplatePath">[CStr(in_dicConfig("NotApprovedSummaryReportTemplatePath"))]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strDownloadedReportPath">[strSummaryReportPath]</OutArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicConfig">[in_dicConfig]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <If Condition="[not(in_boolNoDataNotApproved)]" DisplayName="If Data Not Approved Present" sap:VirtualizedContainerService.HintSize="510,1076" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="476,894" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:FilterDataTable sap2010:Annotation.AnnotationText="This will filter the required columns for not appvoed report" DataTable="[in_dt_WeeklyReport]" DisplayName="Get Not Approved Records" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[dt_WeeklyDetails]" SelectColumnsMode="Keep">
                  <ui:FilterDataTable.Filters>
                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                      <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                    </scg:List>
                  </ui:FilterDataTable.Filters>
                  <ui:FilterDataTable.SelectColumns>
                    <scg:List x:TypeArguments="InArgument" Capacity="8">
                      <InArgument x:TypeArguments="x:String">[cstr(in_dicConfig("ManagerHeaderInRPT00169"))]</InArgument>
                      <InArgument x:TypeArguments="x:String">[cstr(in_dicConfig("ManagerEmailHeaderInRPT00169"))]</InArgument>
                      <InArgument x:TypeArguments="x:String">[cstr(in_dicConfig("LocationHeaderInRPT00169"))]</InArgument>
                      <InArgument x:TypeArguments="x:String">[cstr(in_dicConfig("MangerIDHeaderInRPT00169"))]</InArgument>
                      <InArgument x:TypeArguments="x:String">[cstr(in_dicConfig("EmpIDHeaderInNotApprovedWeeklyReport"))]</InArgument>
                    </scg:List>
                  </ui:FilterDataTable.SelectColumns>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:FilterDataTable>
                <ui:RemoveDuplicateRows DataTable="[dt_WeeklyDetails]" DisplayName="Remove Duplicate Rows From Weekly Report" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_1" OutputDataTable="[dt_WeeklyDetails]" />
                <Assign DisplayName="Convert to CST Data" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[dateToday]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[TimeZoneInfo.ConvertTimeBySystemTimeZoneId(Now,timezoneinfo.Local.Id, "Central Standard Time")]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Bool Last Run Data Not Approved" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[boolLastRun]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">[if(now.Date=dateLastWedOfMonth.Date AndAlso dateToday.Hour&gt;=cint(cstr(in_dicConfig("P003_090_TimesheetApprovals_SummaryMailTime")).Split(":"c).First) andalso dateToday.Minute&gt;=cint(cstr(in_dicConfig("P003_090_TimesheetApprovals_SummaryMailTime")).Split(":"c).last),true,false)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This will udpate the monthly summary report for not approved report" DisplayName="Generate Not Approved Summary Report" sap:VirtualizedContainerService.HintSize="434,155" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Process\SummaryReport\GenerateSummaryReport.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strSummaryReportPath">[strSummaryReportPath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strSummaryReportSheetName">[cstr(in_dicConfig("NotApprovedSummaryReportSheetName"))]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_boolNotApproved">True</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strPrimaryColInWeeklyReport">[cstr(in_dicConfig("EmpIDHeaderInNotApprovedWeeklyReport"))]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strHeaderRowInSummaryReport">[cstr(in_dicConfig("HeaderRowNoInNotApprovedSummaryReport"))]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_WeeklyReportDetails">[dt_WeeklyDetails]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strPrimaryColInSumReport">[cstr(in_dicConfig("EmpIDHeaderInNotApprovedSummaryReport"))]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strCounterColInSumReport">[cstr(in_dicConfig("CounterHeaderInNotApprovedSummaryReport"))]</InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_boolLastRunOfMonth">[boolLastRun]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicConfig">[in_dicConfig]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Upload Not Approved Summary Report To Sharepoint" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Process\Sharepoint\SaveFIleIntoSharepoint.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strLocalFilepath">[strSummaryReportPath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strTenantID">[cstr(in_DicConfig("O365TenantIDAssetName"))]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strApplicationID">[cstr(in_DicConfig("O365ApplicationIDAssetName"))]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strApplicationSecretName">[cstr(in_DicConfig("O365ApplicationSecretAssetName"))]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strSharePtURL">[cstr(in_DicConfig("P003_090_TimesheetApprovals_SPURL"))]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strSharepointParentFolder">[if(strFileName.contains(now.AddMonths(-1).ToString("MMMM")),cstr(in_DicConfig("P003_090_TimesheetApprovals_SPRootFolder"))+"/"+Now.AddMonths(-1).ToString("yyyy")+"/"+Now.AddMonths(-1).ToString("MMMM"),cstr(in_DicConfig("P003_090_TimesheetApprovals_SPRootFolder"))+"/"+Now.ToString("yyyy")+"/"+Now.ToString("MMMM"))]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strOrchestratorFolderpath">[cstr(in_DicConfig("O365AssetsInOrchestratorFolder"))]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strException">[cstr(in_dicConfig("SaveFileSPSE"))]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7" />
            </If.Else>
          </If>
          <Assign DisplayName="Convert to CST Not Approved" sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="s:DateTime">[dateToday]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:DateTime">[TimeZoneInfo.ConvertTimeBySystemTimeZoneId(Now,timezoneinfo.Local.Id, "Central Standard Time")]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Bool Last Run" sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[boolLastRun]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">[if(now.Date=dateLastWedOfMonth.Date AndAlso dateToday.Hour&gt;=cint(cstr(in_dicConfig("P003_090_TimesheetApprovals_SummaryMailTime")).Split(":"c).First) andalso dateToday.Minute&gt;=cint(cstr(in_dicConfig("P003_090_TimesheetApprovals_SummaryMailTime")).Split(":"c).last),true,false)]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[(now.Date=dateLastWedOfMonth.Date AndAlso dateToday.Hour&gt;=cint(cstr(in_dicConfig(&quot;P003_090_TimesheetApprovals_SummaryMailTime&quot;)).Split(&quot;:&quot;c).First) andalso dateToday.Minute&gt;=cint(cstr(in_dicConfig(&quot;P003_090_TimesheetApprovals_SummaryMailTime&quot;)).Split(&quot;:&quot;c).last))]" DisplayName="If Last Wed Last Run" sap:VirtualizedContainerService.HintSize="510,383" sap2010:WorkflowViewState.IdRef="If_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="401,201" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This will send out email for not appvoed summary report" DisplayName="SendMail Not Approved Summary.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="359,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Process\Send Email\SendMail.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="s:String[]" x:Key="in_StrToAddress">[cstr(in_DicConfig("P003_090_TimesheetApprovals_SummaryMailTo")).Split(";")]</InArgument>
                    <InArgument x:TypeArguments="s:String[]" x:Key="in_StrCcAddress">[cstr(in_DicConfig("P003_090_TimesheetApprovals_SummaryMailCC")).Split(";")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrSubject">[cstr(in_dicConfig("NotApprovedSummaryMailSubject")).Replace("{month}",now.ToString("MMMM")).Replace("{year}",now.ToString("yyyy"))]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrBody">[cstr(in_DicConfig("P003_090_TimesheetApprovals_NotApprovedSummaryMailBody")).Replace("{month}",now.ToString("MMMM")).Replace("{year}",now.ToString("yyyy"))]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StrAccount">[CStr(in_DicConfig("P003_090_TimesheetApprovals_MailAccount"))]</InArgument>
                    <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_ListAttachmentPath">[new List(of string) from {strSummaryReportPath}]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicConfig">[in_dicConfig]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="376,229" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log No Run Summaru Not Approved" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Summary report not ran due to criteria not matched&quot;]" />
              </Sequence>
            </If.Else>
          </If>
          <ui:LogMessage DisplayName="Log Not Approved Summary Report End" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Not approved summary report process has been completed&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="576,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="System Exception Not Approved Summary Report" sap:VirtualizedContainerService.HintSize="450,231" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message: SE" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="[UiPath.Core.Activities.LogLevel.Error]" Message="[in_dicConfig(&quot;NotApprovedReportSE&quot;).ToString+Environment.NewLine+&quot;Exception Source: &quot;+exception.Source+Environment.NewLine+&quot;Exception Message: &quot;+exception.Message]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Rethrow DisplayName="Rethrow SE" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>